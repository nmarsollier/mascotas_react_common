{"version":3,"file":"index.js","sources":["../src/components/DangerLabel.tsx","../src/components/ErrorLabel.tsx","../src/components/Form.tsx","../src/components/FormAcceptButton.tsx","../src/components/FormButton.tsx","../src/components/FormButtonBar.tsx","../src/components/FormInput.tsx","../src/components/FormLabel.tsx","../src/components/FormPassword.tsx","../src/components/FormTitle.tsx","../src/components/FormWarnButton.tsx","../src/components/GlobalContent.tsx","../src/components/ImageUpload.tsx","../src/environment/environment.ts","../src/utils/Tools.tsx","../src/utils/ErrorHandler.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface DangerLabelProps {\n    message: string | undefined;\n}\n\nexport default function DangerLabel(props: DangerLabelProps) {\n    if (!props.message) {\n        return null\n    }\n    return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n            {props.message}\n        </div>\n    )\n}","import React from \"react\";\n\ninterface ErrorLabelProps {\n    message: string | undefined;\n}\n\nexport default function ErrorLabel(props: ErrorLabelProps) {\n    if (!props.message) {\n        return null\n    }\n\n    return (\n        <div className=\"invalid-feedback\">{props.message}</div>\n    );\n}\n","import React from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nexport default function Form(props: RouteProps) {\n    return (\n        <form onSubmit={(e) => e.preventDefault()}>\n            {props.children}\n        </form >\n    )\n}","import React from \"react\"\n\ninterface FormAcceptButtonProps {\n    label: string,\n    onClick: () => any\n}\n\nexport default function FormAcceptButton(props: FormAcceptButtonProps) {\n    return (\n        <button className=\"btn btn-primary\" onClick={props.onClick}>{props.label}</button>\n    )\n}\n","import React from \"react\"\n\ninterface FormButtonProps {\n    label: string,\n    onClick: () => any\n}\n\nexport default function FormButton(props: FormButtonProps) {\n    return (\n        <button className=\"btn btn-light\" onClick={props.onClick}>{props.label}</button>\n    )\n}\n","import React from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nexport default function FormButtonBar(props: RouteProps) {\n    return (\n        <div className=\"btn-group \">\n            {props.children}\n        </div >\n    )\n}","import React from \"react\"\nimport ErrorLabel from \"./ErrorLabel\";\nimport ErrorHandler from \"./ErrorHandler\";\n\ninterface FormInputProps {\n    label: string,\n    name: string,\n    errorHandler: ErrorHandler,\n    value?: string | undefined,\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => any\n}\n\nexport default function FormInput(props: FormInputProps) {\n    return (\n        <div className=\"form-group\">\n            <label>{props.label}</label>\n            <input id={props.name}\n                type=\"text\"\n                value={props.value}\n                onChange={props.onChange}\n                className={props.errorHandler.getErrorClass(props.name, \"form-control\")}>\n            </input>\n            <ErrorLabel message={props.errorHandler.getErrorText(props.name)} />\n        </div>\n    )\n}","\ninterface FormLabelProps {\n    label: string,\n    text: string | undefined\n}\n\nexport default function FormLabel(props: FormLabelProps) {\n    return (\n        <div className=\"form-group\">\n            <label>params.label</label>\n            <input className=\"form-control\" id=\"login\" value={props.text} disabled />\n        </div>\n    )\n}","import React from \"react\"\nimport ErrorLabel from \"./ErrorLabel\";\nimport ErrorHandler from \"./ErrorHandler\";\n\ninterface FormPasswordProps {\n    label: string,\n    name: string,\n    errorHandler: ErrorHandler,\n    value?: string | undefined,\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => any\n}\n\nexport default function FormPassword(props: FormPasswordProps) {\n    return (\n        <div className=\"form-group\">\n            <label>{props.label}</label>\n            <input id={props.name} type=\"password\"\n                value={props.value}\n                onChange={props.onChange}\n                className={props.errorHandler.getErrorClass(props.name, \"form-control\")}>\n            </input>\n            <ErrorLabel message={props.errorHandler.getErrorText(props.name)} />\n        </div>\n    )\n}","import React from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nexport default function FormTitle(props: RouteProps) {\n    return (\n        <h2 className=\"global_title\">\n            {props.children}\n        </h2 >\n    )\n}","import React from \"react\"\n\ninterface FormWarnButtonProps {\n    label: string,\n    hidden: boolean,\n    onClick: () => any\n}\n\nexport default function FormWarnButton(props: FormWarnButtonProps) {\n    return (\n        <button hidden={props.hidden} className=\"btn btn-warning\" onClick={props.onClick}>{props.label}</button>\n    )\n}\n","import React from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nexport default function GlobalContent(props: RouteProps) {\n    return (\n        <div className=\"global_content\">\n            {props.children}\n        </div >\n    )\n}","import React, { useRef } from \"react\";\n\ninterface ImageUploadProps {\n    src: string;\n    onChange: (image: string) => void;\n}\n\nexport default function ImageUpload(props: ImageUploadProps) {\n    const fileInput = useRef<HTMLInputElement>(null)\n\n    const imageClick = () => {\n        fileInput.current?.click()\n    }\n\n    const imageSelect = () => {\n        const files = fileInput.current?.files\n        if (files == null) {\n            return;\n        }\n        getBase64(\n            (files)[0],\n            (image) => {\n                if (image && props.onChange) {\n                    props.onChange(image);\n                }\n            });\n    }\n\n    return (\n        <div>\n            <img src={props.src}\n                alt=\"\"\n                height=\"100\"\n                onClick={imageClick} />\n            <input type=\"file\"\n                ref={fileInput}\n                className=\"upload\"\n                accept=\"*\"\n                onChange={imageSelect}\n                style={{ display: \"none\" }} />\n        </div>\n    );\n}\n\nfunction getBase64(file: File, cb: (image: string) => void) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n        cb(reader.result as string);\n    };\n}\n","export const environment = {\n  backendUrl: process.env.BACKEND_URL || \"http://localhost:3000\"\n};\n","import { useState } from \"react\";\nimport { RouteComponentProps } from 'react-router-dom';\n\nexport function goHome(props: RouteComponentProps) {\n    props.history.push(\"/\");\n}\n\nexport function useForceUpdate() {\n    const setForceUpdate = useState(0)[1]\n\n    return () => {\n        setForceUpdate(Date.now)\n    }\n}\n","import { useState } from \"react\";\nimport ApiError from \"./ApiError\";\nimport { useForceUpdate } from \"./Tools\";\n\nclass ErrorHandler {\n    constructor(forceUpdate: () => any) {\n        this.forceUpdate = forceUpdate\n    }\n\n    private forceUpdate: () => any\n\n    // Es un error genérico en el form, no asociado a ningún componente visual\n    public errorMessage?: string = undefined;\n\n    // Son errores de los componentes visuales, es un map\n    // la clave es el campo con error, el contenido es el mensaje\n    public errors: Map<string, string> = new Map();\n\n    // Procesa errores rest y llena errors de acuerdo a los resultados\n    public processRestValidations(data: ApiError) {\n        if (this.errors && this.errors.size > 0) {\n            this.cleanRestValidations();\n            this.forceUpdate()\n        }\n        if (!data.response || !data.response.data) {\n            this.errorMessage = \"Problemas de conexión, verifique conexión a internet.\";\n            this.forceUpdate();\n            return;\n        }\n        if (data.response.data.messages) {\n            for (const error of data.response.data.messages) {\n                this.errors.set(error.path, error.message);\n            }\n        } else if ((typeof data.response.data.error) === \"string\") {\n            this.errorMessage = data.response.data.error;\n        } else {\n            this.errorMessage = \"Problemas internos del servidor\";\n        }\n        this.forceUpdate();\n    }\n\n    public addError(component: string, message: string) {\n        this.errors.set(component, message);\n        this.forceUpdate()\n    }\n\n    // Limpia las validaciones actuales de errores\n    public cleanRestValidations() {\n        this.errorMessage = undefined;\n        this.errors.clear();\n        this.forceUpdate();\n    }\n\n    // Devuelve el texto del error de un elemento\n    public getErrorText(item: string) {\n        return this.errors.get(item);\n    }\n\n    public getErrorClass(component: string, baseClass: string) {\n        return baseClass + (this.getErrorText(component) ? \" is-invalid\" : \"\");\n    }\n\n    public hasErrors() {\n        return this.errors.size > 0 && !this.errorMessage;\n    }\n}\n\nfunction useErrorHandler(): ErrorHandler {\n    const forceUpdate = useForceUpdate();\n    const handler = useState(new ErrorHandler(forceUpdate))[0]\n    return handler\n}\n\nexport { ErrorHandler, useErrorHandler };\n"],"names":["DangerLabel","props","message","React","ErrorLabel","Form","e","preventDefault","children","FormAcceptButton","onClick","label","FormButton","FormButtonBar","FormInput","name","value","onChange","errorHandler","getErrorClass","getErrorText","FormLabel","text","FormPassword","FormTitle","FormWarnButton","hidden","GlobalContent","ImageUpload","fileInput","useRef","imageClick","current","click","imageSelect","files","getBase64","image","src","display","file","cb","reader","FileReader","readAsDataURL","onload","result","environment","backendUrl","process","env","BACKEND_URL","goHome","history","push","useForceUpdate","setForceUpdate","useState","Date","now","ErrorHandler","forceUpdate","undefined","Map","processRestValidations","data","errors","size","cleanRestValidations","response","errorMessage","messages","error","set","path","addError","component","clear","item","get","baseClass","hasErrors","useErrorHandler","handler"],"mappings":"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"}